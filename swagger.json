{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Ronda API",
    "contact": {
      "email": "hello@andreacanton.dev"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "auth",
      "description": "Authentications endpoints"
    },
    {
      "name": "user",
      "description": "Manage users and personal profile"
    },
    {
      "name": "recipient",
      "description": "Manage Ronda's recipients"
    },
    {
      "name": "items",
      "description": "Get available items"
    }
  ],
  "servers": [
    {
      "url": "https://api.rondadellacaritaverona.org",
      "description": "Production"
    },
    {
      "url": "http://localhost:3000",
      "description": "Development"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Retrive access_token",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identity": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/public-key": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Retrive JWT Public Key",
        "description": "",
        "produces": [
          "plain/text"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "initialize process to retrive the password",
        "description": "It will send an email to the user with a link",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "resetUrl",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identity": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "reset the password",
        "description": "It will send an email to the user with a link to reset the password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "order placed for purchasing the pet",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "identity": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "refresh token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get list of users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string",
            "description": "Search parameter on email, memberNumber, firstname and lastname"
          },
          {
            "in": "query",
            "name": "p",
            "schema": {
              "type": "integer"
            },
            "description": "Page number. Default 1"
          },
          {
            "in": "query",
            "name": "psize",
            "schema": {
              "type": "integer"
            },
            "description": "Page size. Default 20"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ]
            },
            "description": "Filter per user Status"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string",
              "enum": [
                "admin",
                "member"
              ]
            },
            "description": "Filter per user Role"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Field name to sort with",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dir",
            "description": "Sort direction. Default `asc`",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Register user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resetUrl",
            "in": "query",
            "required": true
          },
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/components/requestBody/User"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/users/{uuid}": {
      "parameters": [
        {
          "in": "path",
          "name": "uuid",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Edit user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/components/requestBody/User"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deactivate user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/is-taken/{fieldName}/{fieldValue}": {
      "get": {
        "tags": [
          "user"
        ],
        "parameters": [
          {
            "name": "fieldName",
            "in": "path",
            "schema": {
              "type": "string",
              "enum": [
                "email",
                "memberNumber"
              ]
            }
          },
          {
            "name": "fieldValue",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "isTaken": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get personal user",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "user"
        ],
        "summary": "Edit personal user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstname": {
                  "type": "string"
                },
                "lastname": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/recipients": {
      "get": {
        "tags": [
          "recipient"
        ],
        "summary": "Get list of recipients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "type": "string",
            "description": "Search parameter on email, memberNumber, firstname and lastname"
          },
          {
            "in": "query",
            "name": "p",
            "schema": {
              "type": "integer"
            },
            "description": "Page number. Default 1"
          },
          {
            "in": "query",
            "name": "psize",
            "schema": {
              "type": "integer"
            },
            "description": "Page size. Default 20"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ]
            },
            "description": "Filter per Status"
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Field name to sort with",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dir",
            "description": "Sort direction. Default `asc`",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Recipient"
              },
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "recipient"
        ],
        "summary": "Register recipient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipient",
            "in": "body",
            "schema": {
              "$ref": "#/components/requestBody/Recipient"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Recipient"
              },
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/recipients/{id}": {
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "recipient"
        ],
        "summary": "Get recipient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Recipient"
              },
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "recipient"
        ],
        "summary": "Edit recipient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "recipient",
            "in": "body",
            "schema": {
              "$ref": "#/components/requestBody/Recipient"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Recipient"
              },
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "recipient"
        ],
        "summary": "Deactivate recipient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/recipients/is-card-number-taken/{fieldValue}": {
      "get": {
        "tags": [
          "recipient"
        ],
        "parameters": [
          {
            "name": "fieldValue",
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipientId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "properties": {
                "isTaken": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    }
  },
  "/items": {
    "get": {
      "tags": [
        "items"
      ],
      "summary": "Get list of items",
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/Unauthorized"
        }
      },
      "security": [
        {
          "Bearer": []
        }
      ]
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "components": {
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "requestBody": {
      "User": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "topSize": {
            "type": "string"
          },
          "bottomSize": {
            "type": "string"
          },
          "shoeSize": {
            "type": "string"
          }
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "memberNumber": {
            "type": "integer"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "passwordDigest": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "recipientId": {
            "type": "integer"
          },
          "cardNumber": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "topSize": {
            "type": "string"
          },
          "bottomSize": {
            "type": "string"
          },
          "shoeSize": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sizeCategory": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    }
  }
}
